#почни тут створювати додаток з розумними замітками
from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import QApplication, QWidget, QLabel, QPushButton, QListWidget, QVBoxLayout, QHBoxLayout, QTextEdit, QLineEdit, QInputDialog
import json
'''
data = {
    'Школа':{
        'текст':'Школа - це храм науки, який ніхто не любить. Це просто ад на землі.',
        'теги': ['наука', 'знання']
    }
}

with open("list.json", "w", encoding = "utf-8") as file:
    json.dump(data, file)
'''
data = {}
app = QApplication([])
win = QWidget()
win.setWindowTitle('Розумні замітки')

text_note = QTextEdit()
notes_Label = QLabel('Список заміток:')
list_note = QListWidget()

create_note = QPushButton("Створити замітку")
del_note = QPushButton("Видалити замітку")
save_note = QPushButton("Зберегти замітку")

tag_label = QLabel('Список тегів:')
list_tag = QListWidget()
pole_tag =  QLineEdit()
pole_tag.setPlaceholderText('Введіть тег...')

add_tag = QPushButton("Додати до замітки")
del_tag = QPushButton("Відкріпити від замітки")
search_tag = QPushButton("Шукати замітку по тегу")

line = QHBoxLayout()
col1  = QVBoxLayout() 
col2 = QVBoxLayout()

col1.addWidget(text_note)

col2.addWidget(notes_Label)
col2.addWidget(list_note)

row1 = QHBoxLayout()
row1.addWidget(create_note)
row1.addWidget(del_note)

col2.addLayout(row1)
col2.addWidget(save_note)

col2.addWidget(tag_label)
col2.addWidget(list_tag)
col2.addWidget(pole_tag)

row2 = QHBoxLayout()
row2.addWidget(del_tag)
row2.addWidget(add_tag)

col2.addLayout(row2)
col2.addWidget(search_tag)

line.addLayout(col1, stretch = 2)
line.addLayout(col2, stretch = 1)

win.setLayout(line)
win.resize(900, 605)


def add_note():
    ok, ko = QInputDialog.getText(win, 'mini win', 'Введіть назву замітки')
    if ok and ko != '':
        data[ok] = {'текст':'','теги': []}
        list_note.addItem(ok)

create_note.clicked.connect(add_note)

def save_notes():
    if list_note.selectedItems():
        key = list_note.selectedItems()[0].text()
        data[key]['текст'] = text_note.toPlainText()
        with open("list.json", "w", encoding = "utf-8") as file:
            json.dump(data, file, sort_keys=True)
    else:
        print('Ви не обрали замітку для збереження')

save_note.clicked.connect(save_notes)

def notes_del():
    if list_note.selectedItems():
        key = list_note.selectedItems()[0].text()
        del data[key]
        list_note.clear()
        list_tag.clear()
        text_note.clear()
        list_note.addItems(data)
        with open("list.json", "w", encoding = "utf-8") as file:
            json.dump(data, file, sort_keys=True)
    else:
        print('Ви не обрали замітку для видалення')

del_note.clicked.connect(notes_del)

def tag_add():
    if list_note.selectedItems():
        key = list_note.selectedItems()[0].text()
        tag = pole_tag.text()
        if not tag in data[key]['теги']:
            data[key]['теги'].append(tag)
            list_tag.addItem(tag)
            pole_tag.clear()
        with open("list.json", "w", encoding = "utf-8") as file:
            json.dump(data, file, sort_keys=True)
    else:
        print('Ви не обрали замітку для додавання тегу')

add_tag.clicked.connect(tag_add)

def tag_del():
    if list_tag.selectedItems():
        key = list_note.selectedItems()[0].text()
        tag = list_tag.selectedItems()[0].text()
        data[key]['теги'].remove(tag)
        list_tag.clear()
        list_tag.addItems(data[key]['теги'])
        with open("list.json", "w", encoding = "utf-8") as file:
            json.dump(data, file, sort_keys=True)
    else:
        print('Ви не обрали тег для видалення')
del_tag.clicked.connect(tag_del)

def tag_search():
    tag = pole_tag.text()
    if search_tag.text() == "Шукати замітку по тегу" and tag:
        stt = {}
        for da in data:
            if tag in data[da]['теги']:
                stt[da] = data[da]
        search_tag.setText('Скинути пошук')
        list_note.clear()
        list_tag.clear()
        list_note.addItems(stt)
    elif search_tag.text() == 'Скинути пошук':
        pole_tag.clear()
        list_tag.clear()
        list_note.clear()
        list_note.addItems(data)
        search_tag.setText("Шукати замітку по тегу")
    else:
        pass
search_tag.clicked.connect(tag_search)
    

def show_note():
    key = list_note.selectedItems()[0].text()
    text_note.setText(data[key]['текст'])
    list_tag.clear()
    list_tag.addItems(data[key]['теги'])

list_note.itemClicked.connect(show_note)


with open('list.json', 'r', encoding = 'utf-8') as file:
    data = json.load(file)
list_note.addItems(data)


win.show()
app.exec_()

